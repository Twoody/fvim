#!/bin/sh
#***************************************************************************#
#***************************************************************************#
#                            MAIN  SCRIPT                                   #
#***************************************************************************#
#***************************************************************************#
#                                                                           #
# Author: Tanner Woody                                                      #
# Date: 2020-05-19                                                          #
# Last Update: 2020-05-19                                                   #
#                                                                           #
#***************************************************************************#
#                                                                           #
# Purpose:                                                                  #
#  Make `vim file` smarter and easier                                       #
#                                                                           #
#***************************************************************************#

# TODO: Make a node_modules flag
# TODO: Make a ./test flag

help () {
	printf "fvim - An easier way to modify long files\n"
	printf "  For when tab completion just takes too long\n\n"
	printf "  USAGE:\n"
	printf "    fvim\n"
	printf "    fvim -h\n"
	printf "    fvim foo\n"
	printf "  OPTIONS:\n"
	printf "    -h -- Show this message\n"
	printf "  FUTURE OPTIONS:\n"
	printf "    -n -- Include ./node_modules/ into search\n"
	printf "      fvim foo -n\n"
	printf "    -t -- Include ./tests/ into search\n"
	printf "      fvim foo -t\n"
	printf "  \n"
}

# @param $1 - pattern to match
# @param $2 - exclude dir
fvim () {
	ret=''
	for match in `find . -iname "*$1*" -not -path "./node_modules/*"`;do
		local res=$(confirm "Open $match: ")
		if [ "$res" -eq "1" ]; then
			ret=$match
			break
		fi
		if [ "$res" -eq "-1" ]; then
			printf "ABORTED\n"
			return
		fi
	done
	# If we found a file, open it
	if [ -n "$ret" ]; then
		vim $ret
	else
		printf "NO MATCHES FOUND\n"
	fi
	return
}

# Ask a question and return input
# @param1 - Message
# @return - Boolean if confirmed or not
confirm () {
	while true; do
	read -p "$1 " foo
		case $foo in
			[yY]*)
				echo 1
				break
				;;
			[nN]*)
				echo 0
				break
				;;
			[qQ]*)
				echo -1
				break
				;;
		esac
	done
	return
}

if [ $# -eq 0 ] ;
then
	printf "No argument supplied\n\n"
	help
else
	if [[ $1 == "-h" ]] || [[ $2 == "-h" ]]; then
		help
	else
		shopt -s dotglob
		shopt -s nullglob
		fvim $1
	fi
fi

